{
    "version": "https://jsonfeed.org/version/1",
    "title": "渺啊渺",
    "subtitle": "往无语来无杳",
    "icon": "https://blog.icuxika.com/images/favicon.ico",
    "description": "",
    "home_page_url": "https://blog.icuxika.com",
    "items": [
        {
            "id": "https://blog.icuxika.com/2022/08/21/programming/gradle/version-catalog/",
            "url": "https://blog.icuxika.com/2022/08/21/programming/gradle/version-catalog/",
            "title": "Gradle 使用 version catalog 来完成依赖版本管理",
            "date_published": "2022-08-21T12:12:48.000Z",
            "content_html": "<div class=\"note info\">\n<p>Vue.js 官方已经提供了新的脚手架项目以便使用 Vite 来搭建 Vue3 项目</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL2NyZWF0ZS12dWU=\">create-vue</span></li>\n</ul>\n<p>相比于直接使用 Vite 提供的项目模板，此项目能够更方便的集成 Vue Router、Pinia、 Vitest、Cypress、Eslint 和 Prettier</p>\n</div>\n<div class=\"note warning\">\n<p>本文并没有使用 create-vue 项目来生成项目，而是基于 Vite 提供的初始模板来完成</p>\n</div>\n<h1 id=\"项目创建\"><a class=\"anchor\" href=\"#项目创建\">#</a> 项目创建</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">yarn</span> create vite</pre></td></tr></table></figure>",
            "tags": [
                "编程",
                "Gradle",
                "Gradle"
            ]
        },
        {
            "id": "https://blog.icuxika.com/2022/08/20/programming/vue/vue-scaffold/",
            "url": "https://blog.icuxika.com/2022/08/20/programming/vue/vue-scaffold/",
            "title": "vue3 脚手架项目搭建",
            "date_published": "2022-08-19T16:04:48.000Z",
            "content_html": "<div class=\"note info\">\n<p>Vue.js 官方已经提供了新的脚手架项目以便使用 Vite 来搭建 Vue3 项目</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL2NyZWF0ZS12dWU=\">create-vue</span></li>\n</ul>\n<p>相比于直接使用 Vite 提供的项目模板，此项目能够更方便的集成 Vue Router、Pinia、 Vitest、Cypress、Eslint 和 Prettier</p>\n</div>\n<div class=\"note warning\">\n<p>本文并没有使用 create-vue 项目来生成项目，而是基于 Vite 提供的初始模板来完成</p>\n</div>\n<h1 id=\"项目创建\"><a class=\"anchor\" href=\"#项目创建\">#</a> 项目创建</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">yarn</span> create vite</pre></td></tr></table></figure><h1 id=\"添加-jsx-支持\"><a class=\"anchor\" href=\"#添加-jsx-支持\">#</a> 添加 JSX 支持</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> -D @vitejs/plugin-vue-jsx</pre></td></tr></table></figure><p>在  <code>vite.config.ts</code>  文件应用插件</p>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> vueJsx <span class=\"token keyword\">from</span> <span class=\"token string\">\"@vitejs/plugin-vue-jsx\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token function\">vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">vueJsx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"配置-eslint\"><a class=\"anchor\" href=\"#配置-eslint\">#</a> 配置 Eslint</h1>\n<h1 id=\"配置-prettier\"><a class=\"anchor\" href=\"#配置-prettier\">#</a> 配置 Prettier</h1>\n<h1 id=\"初始化为-git-仓库\"><a class=\"anchor\" href=\"#初始化为-git-仓库\">#</a> 初始化为 Git 仓库</h1>\n<h1 id=\"配置-commitlint\"><a class=\"anchor\" href=\"#配置-commitlint\">#</a> 配置 commitlint</h1>\n<h1 id=\"配置-commitizen\"><a class=\"anchor\" href=\"#配置-commitizen\">#</a> 配置 Commitizen</h1>\n<h1 id=\"配置-husky\"><a class=\"anchor\" href=\"#配置-husky\">#</a> 配置 husky</h1>\n<h1 id=\"待整理\"><a class=\"anchor\" href=\"#待整理\">#</a> 待整理</h1>\n<p>yarn create vite<br />\nyarn add -D @vitejs/plugin-vue-jsx<br />\n// 初始化 ESLint <span class=\"exturl\" data-url=\"aHR0cHM6Ly9lc2xpbnQub3JnL2RvY3MvbGF0ZXN0L3VzZXItZ3VpZGUvZ2V0dGluZy1zdGFydGVk\">https://eslint.org/docs/latest/user-guide/getting-started</span> 主要用于发现代码的错误<br />\n npm init @eslint/config<br />\n// 选择 To check syntax and find problems<br />\n// 会添加 @typescript-eslint/eslint-plugin @typescript-eslint/parser eslint eslint-plugin-vue 共 4 个依赖项</p>\n<p>// 应用 Prettier <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ByZXR0aWVyL2VzbGludC1wbHVnaW4tcHJldHRpZXI=\">https://github.com/prettier/eslint-plugin-prettier</span>  主要用于格式化代码<br />\n yarn add -D eslint-plugin-prettier<br />\nyarn add -D prettier --exact<br />\nyarn add -D eslint-config-prettier</p>\n<p>// 应用 @vitejs/plugin-vue-jsx 插件提供 Vue 3 JSX 支持<br />\n vite.config.ts<br />\nimport vueJsx from &quot;@vitejs/plugin-vue-jsx&quot;;<br />\nplugins: [vue(), vueJsx()];</p>\n<p>//eslint 配置 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9lc2xpbnQudnVlanMub3JnL3VzZXItZ3VpZGUvI2luc3RhbGxhdGlvbg==\">https://eslint.vuejs.org/user-guide/#installation</span><br />\n 在 .eslintrc.json 设置 eslint 规则并<br />\n配置 &quot;plugin:vue/vue3-recommended&quot;<br />\n配置&quot;plugin:prettier/recommended&quot; 来自 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ByZXR0aWVyL2VzbGludC1wbHVnaW4tcHJldHRpZXI=\">https://github.com/prettier/eslint-plugin-prettier</span></p>\n<p>创建 .prettierrc.json 设置 prettierrc 规则</p>\n<p>// husky<br />\ngit init // 使用 husky 的前提是当前目录是一个 git 仓库<br />\n yarn add -D husky<br />\nnpm set-script prepare &quot;husky install&quot;<br />\nyarn // 再次执行 yarn 会自动触发此命令</p>\n<p>// commitlint<br />\nyarn add -D @commitlint/config-conventional @commitlint/cli</p>\n<p>// commitizen<br />\nyarn add -D commitizen<br />\nnpx commitizen init cz-conventional-changelog --save-dev --save-exact</p>\n<p>vue-router, pinia, vitest ...</p>\n",
            "tags": [
                "编程",
                "Vue.js",
                "Vue.js",
                "Vite"
            ]
        },
        {
            "id": "https://blog.icuxika.com/2021/08/25/Spring-Boot-%E5%8F%82%E6%95%B0%E6%A0%A1%E9%AA%8C/",
            "url": "https://blog.icuxika.com/2021/08/25/Spring-Boot-%E5%8F%82%E6%95%B0%E6%A0%A1%E9%AA%8C/",
            "title": "Spring Boot 参数校验",
            "date_published": "2021-08-25T03:21:32.000Z",
            "content_html": "<h4 id=\"版本\"><a class=\"anchor\" href=\"#版本\">#</a> 版本</h4>\n<p><code>2.5.2</code></p>\n<h4 id=\"依赖\"><a class=\"anchor\" href=\"#依赖\">#</a> 依赖</h4>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>implementation 'org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token operator\">:</span>spring<span class=\"token operator\">-</span>boot<span class=\"token operator\">-</span>starter<span class=\"token operator\">-</span>web'</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>implementation 'org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token operator\">:</span>spring<span class=\"token operator\">-</span>boot<span class=\"token operator\">-</span>starter<span class=\"token operator\">-</span>validation'</pre></td></tr></table></figure><h4 id=\"全局异常配置\"><a class=\"anchor\" href=\"#全局异常配置\">#</a> 全局异常配置</h4>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@ControllerAdvice</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExceptionHandlerAdvice</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     * 全局异常兜底处理</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@ResponseBody</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ApiData</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Void</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">ApiData</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Void</span><span class=\"token punctuation\">></span></span> apiData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApiData</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        apiData<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>INTERNAL_SERVER_ERROR<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        apiData<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> apiData<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>     * 业务异常消息</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServiceException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token annotation punctuation\">@ResponseBody</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ApiData</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Void</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServiceException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token class-name\">ApiData</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Void</span><span class=\"token punctuation\">></span></span> apiData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApiData</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        apiData<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getStatusCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        apiData<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">return</span> apiData<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>     * [@RequestParam] 注解的参数不存在</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MissingServletRequestParameterException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token annotation punctuation\">@ResponseBody</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ApiData</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Void</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MissingServletRequestParameterException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token class-name\">ApiData</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Void</span><span class=\"token punctuation\">></span></span> apiData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApiData</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        apiData<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>INTERNAL_SERVER_ERROR<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        apiData<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageFormat</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"缺少参数&#123;0&#125;，类型[&#123;1&#125;]\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getParameterName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getParameterType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">return</span> apiData<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>     * [POST/GET] 单参数验证未通过，必须在 Controller 类上加上 @Validated 注解，否则在参数上无效</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConstraintViolationException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token annotation punctuation\">@ResponseBody</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ApiData</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Void</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConstraintViolationException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token class-name\">ApiData</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Void</span><span class=\"token punctuation\">></span></span> apiData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApiData</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        apiData<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>INTERNAL_SERVER_ERROR<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        apiData<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">return</span> apiData<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>     * [GET] 对象参数验证未通过</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BindException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token annotation punctuation\">@ResponseBody</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ApiData</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Void</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BindException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token class-name\">ApiData</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Void</span><span class=\"token punctuation\">></span></span> apiData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApiData</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        apiData<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>INTERNAL_SERVER_ERROR<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        apiData<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span><span class=\"token function\">parseErrors</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getBindingResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token keyword\">return</span> apiData<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>     * [POST] 对象参数验证未通过</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MethodArgumentNotValidException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token annotation punctuation\">@ResponseBody</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ApiData</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Void</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MethodArgumentNotValidException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token class-name\">ApiData</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Void</span><span class=\"token punctuation\">></span></span> apiData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApiData</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        apiData<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>INTERNAL_SERVER_ERROR<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        apiData<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span><span class=\"token function\">parseErrors</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getBindingResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token keyword\">return</span> apiData<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">parseErrors</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BindingResult</span> bindingResult<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token keyword\">return</span> bindingResult<span class=\"token punctuation\">.</span><span class=\"token function\">getAllErrors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMap</span><span class=\"token punctuation\">(</span>objectError <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FieldError</span><span class=\"token punctuation\">)</span> objectError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> objectError <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>objectError<span class=\"token punctuation\">.</span><span class=\"token function\">getDefaultMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                <span class=\"token keyword\">return</span> objectError<span class=\"token punctuation\">.</span><span class=\"token function\">getDefaultMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token string\">\"参数校验失败\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"使用\"><a class=\"anchor\" href=\"#使用\">#</a> 使用</h4>\n<h5 id=\"单参数验证\"><a class=\"anchor\" href=\"#单参数验证\">#</a> 单参数验证</h5>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * 必须在 Controller 类上加上 @Validated 注解，加在参数上无效</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"validate\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestParam</span> <span class=\"token annotation punctuation\">@Min</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>如果参数不加  <code>@RequestParam</code>  注解，前端请求未携带  <code>id</code>  的话，会打印出  <code>null</code> ，携带 <code>id</code>  的话，会校验参数是否符合条件（会触发 <code>ConstraintViolationException</code> ），但是如果加了  <code>@NotNull</code>  注解的话，也能拦截到为 <code>null</code>  的情况，会触发 <code>ConstraintViolationException</code> 。如果参数加了 <code>@RequestParam</code>  注解的话，前端请求未携带  <code>id</code>  的话，会触发  <code>MissingServletRequestParameterException</code>  。 <code>@Validated</code>  注解必须要加在  <code>Controller</code>  类上，否则校验无效。</p>\n</blockquote>\n<h5 id=\"post-对象\"><a class=\"anchor\" href=\"#post-对象\">#</a> POST 对象</h5>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * 必须在参数上加上注解 @Validated，类上的无效</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"validatePost\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">validatePost</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token annotation punctuation\">@Validated</span> <span class=\"token class-name\">Parameter</span> parameter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>parameter<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p><code>@Validated</code>  注解必须要加在参数上，否则即使  <code>Controller</code>  类上加了也无效。 <code>@RequestBody</code>  注解，加了的话， <code>MethodArgumentNotValidException</code>  会获取到所有属性的校验错误信息，未加的话，会触发  <code>BindException</code>  ，只会知道第一个未满足校验条件的属性报错信息。</p>\n</blockquote>\n<h5 id=\"get-对象\"><a class=\"anchor\" href=\"#get-对象\">#</a> GET 对象</h5>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * 必须在参数上加上注解 @Validated，类上的无效</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"validateGet\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">validateGet</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Validated</span> <span class=\"token class-name\">Parameter</span> parameter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>parameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p><code>@Validated</code>  注解必须要加在参数上，否则即使  <code>Controller</code>  类上加了也无效。</p>\n</blockquote>\n<h4 id=\"待补充\"><a class=\"anchor\" href=\"#待补充\">#</a> 待补充</h4>\n<blockquote>\n<p>分组校验的内容 <span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zOTg1NzAzODE=\">Spring Boot 参数校验以及分组校验的使用</span></p>\n</blockquote>\n<h4 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h4>\n<ul>\n<li>单参数加  <code>@RequestParam</code>  ， <code>@Validated</code>  加在类上</li>\n<li><code>POST</code>   对象加  <code>@RequestBody</code>  ，  <code>@Validated</code>  加在参数上</li>\n<li><code>GET</code>  对象不加  <code>@RequestBody</code>  ， <code>@Validated</code>  加在参数上</li>\n</ul>\n",
            "tags": [
                "Java",
                "Spring Boot"
            ]
        },
        {
            "id": "https://blog.icuxika.com/2021/05/08/Markdown%E6%96%87%E6%A1%A3%E8%BD%ACPDF%EF%BC%88%E4%B8%AD%E6%96%87%EF%BC%89%E8%AE%B0%E5%BD%95/",
            "url": "https://blog.icuxika.com/2021/05/08/Markdown%E6%96%87%E6%A1%A3%E8%BD%ACPDF%EF%BC%88%E4%B8%AD%E6%96%87%EF%BC%89%E8%AE%B0%E5%BD%95/",
            "title": "Markdown文档转PDF（中文）记录",
            "date_published": "2021-05-08T13:29:19.000Z",
            "content_html": "<h4 id=\"安装latex\"><a class=\"anchor\" href=\"#安装latex\">#</a> 安装 <code>LaTeX</code></h4>\n<pre><code>brew install --cask basictex\n</code></pre>\n<h4 id=\"配置环境变量\"><a class=\"anchor\" href=\"#配置环境变量\">#</a> 配置环境变量</h4>\n<pre><code>export PATH=/Library/TeX/texbin:$PATH\n</code></pre>\n<h4 id=\"尝试此模板时安装的-eisvogel-相关依赖\"><a class=\"anchor\" href=\"#尝试此模板时安装的-eisvogel-相关依赖\">#</a> 尝试此模板时安装的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1dhbmRtYWxmYXJiZS9wYW5kb2MtbGF0ZXgtdGVtcGxhdGUuZ2l0\">eisvogel</span> 相关依赖</h4>\n<pre><code>sudo tlmgr install adjustbox babel-german background bidi collectbox csquotes everypage filehook footmisc footnotebackref framed fvextra letltxmacro ly1 mdframed mweights needspace pagecolor sourcecodepro sourcesanspro titling ucharcat ulem unicode-math upquote xecjk xurl zref\n</code></pre>\n<h4 id=\"最关键的依赖配置cjkmainfont需要这个依赖实际上提示的错误是-latex-error-file-ctexhooksty-not-found\"><a class=\"anchor\" href=\"#最关键的依赖配置cjkmainfont需要这个依赖实际上提示的错误是-latex-error-file-ctexhooksty-not-found\">#</a> 最关键的依赖，配置 <code>CJKmainfont</code>  需要这个依赖，实际上提示的错误是 <code>! LaTeX Error: File </code> ctexhook.sty' not found.`</h4>\n<pre><code>sudo tlmgr install ctex --repository http://mirrors.aliyun.com/CTAN/systems/texlive/tlnet/\n</code></pre>\n<h4 id=\"此处字体自行更换配置了cjkmainfont中文长行自动换行才正常\"><a class=\"anchor\" href=\"#此处字体自行更换配置了cjkmainfont中文长行自动换行才正常\">#</a> 此处字体自行更换，配置了 <code>CJKmainfont</code>  中文长行自动换行才正常</h4>\n<pre><code>pandoc demo.md -o ~/Downloads/demo.pdf --pdf-engine=xelatex -V mainfont='PingFang SC' -V sansfont='PingFang SC' -V CJKmainfont=&quot;PingFang SC&quot;\n</code></pre>\n<h4 id=\"使用eisvogel\"><a class=\"anchor\" href=\"#使用eisvogel\">#</a> 使用 <code>eisvogel</code></h4>\n<pre><code>pandoc demo.md -o ~/Downloads/demo.pdf --pdf-engine=xelatex -V mainfont='PingFang SC' -V sansfont='PingFang SC' -V CJKmainfont=&quot;PingFang SC&quot; --template=eisvogel.tex\n</code></pre>\n",
            "tags": [
                "编程珠玑",
                "编程珠玑"
            ]
        },
        {
            "id": "https://blog.icuxika.com/2021/04/03/%E5%9C%A8vue3%E4%B8%AD%E4%BD%BF%E7%94%A8axios%EF%BC%88JavaScript%E7%89%88%E6%9C%AC%EF%BC%89/",
            "url": "https://blog.icuxika.com/2021/04/03/%E5%9C%A8vue3%E4%B8%AD%E4%BD%BF%E7%94%A8axios%EF%BC%88JavaScript%E7%89%88%E6%9C%AC%EF%BC%89/",
            "title": "在vue3中使用axios（JavaScript版本）",
            "date_published": "2021-04-03T03:30:28.000Z",
            "content_html": "<h2 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> axios</pre></td></tr></table></figure><h2 id=\"配置\"><a class=\"anchor\" href=\"#配置\">#</a> 配置</h2>\n<blockquote>\n<p>src/utils/axios/index.js</p>\n</blockquote>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * 请求拦截、错误统一处理</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> message <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ant-design-vue'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> instance <span class=\"token operator\">=</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token literal-property property\">baseURL</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://localhost:8080'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function-variable function\">validateStatus</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 此处决定请求响应 status 不满足该条件时进入 error 分支</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">return</span> status <span class=\"token operator\">>=</span> <span class=\"token number\">200</span> <span class=\"token operator\">&amp;&amp;</span> status <span class=\"token operator\">&lt;</span> <span class=\"token number\">300</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function-variable function\">transformResponse</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token string-property property\">'Content-Type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'application/json;charset=utf-8'</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token literal-property property\">timeout</span><span class=\"token operator\">:</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 超时时间，</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token literal-property property\">responseType</span><span class=\"token operator\">:</span> <span class=\"token string\">'json'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token literal-property property\">responseEncoding</span><span class=\"token operator\">:</span> <span class=\"token string\">'utf8'</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"26\"></td><td><pre> * 请求拦截器</pre></td></tr><tr><td data-num=\"27\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>instance<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\">// 每次发送请求之前判断是否存在 token，存在则添加到请求头中</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    token <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>token <span class=\"token operator\">=</span> token<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">return</span> config<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"38\"></td><td><pre> * 响应拦截器</pre></td></tr><tr><td data-num=\"39\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>instance<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token comment\">// 请求已经发出</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token number\">401</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'未登录'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                <span class=\"token comment\">// 跳转到登录页面</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                message<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"未登录\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token number\">403</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'登录过期，请重新登录'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                <span class=\"token comment\">// 清除当前 token</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                <span class=\"token comment\">// 进行提示并跳转到登录页面</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                message<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"登录过期，请重新登录\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token number\">404</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请求地址错误'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                message<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请求地址错误\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'其他错误'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token comment\">// 断网、连接超时</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        message<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"网络连接异常\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token comment\">// 不进行 return axios 请求响应不会进入 catch 分支，但却会进入 then 分支，不过此时 then 分支的参数值是为空的</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token comment\">// 返回后，catch 分支中可以获取 error 信息</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token comment\">// 实际上，对于未成功的请求响应，因为已在拦截器进行处理，所以实际使用时不用进行 catch 操作</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> instance<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"vue3全局属性设置\"><a class=\"anchor\" href=\"#vue3全局属性设置\">#</a> vue3 全局属性设置</h2>\n<blockquote>\n<p>src/main.js</p>\n</blockquote>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'./utils/axios'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>app<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>globalProperties<span class=\"token punctuation\">.</span>$axios <span class=\"token operator\">=</span> axios</pre></td></tr></table></figure><h2 id=\"使用\"><a class=\"anchor\" href=\"#使用\">#</a> 使用</h2>\n<h3 id=\"setup方法中\"><a class=\"anchor\" href=\"#setup方法中\">#</a>  <code>setup</code>  方法中</h3>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>getCurrentInstance<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> $axios <span class=\"token operator\">=</span> <span class=\"token function\">getCurrentInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>appContext<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>globalProperties<span class=\"token punctuation\">.</span>$axios</pre></td></tr></table></figure><h3 id=\"methods方法中\"><a class=\"anchor\" href=\"#methods方法中\">#</a>  <code>methods</code>  方法中</h3>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios</pre></td></tr></table></figure>",
            "tags": [
                "编程珠玑",
                "编程珠玑"
            ]
        },
        {
            "id": "https://blog.icuxika.com/2020/11/01/SSH%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/",
            "url": "https://blog.icuxika.com/2020/11/01/SSH%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/",
            "title": "SSH使用记录",
            "date_published": "2020-11-01T02:20:21.000Z",
            "content_html": "<h3 id=\"反向代理\"><a class=\"anchor\" href=\"#反向代理\">#</a> 反向代理</h3>\n<pre><code>ssh -g -N -p 22 -R home.icuxika.com:5000:localhost:3389 icuxika@home.icuxika.com\n</code></pre>\n<blockquote>\n<p>说明：通过访问【<span class=\"exturl\" data-url=\"aHR0cDovL2hvbWUuaWN1eGlrYS5jb20=\">home.icuxika.com</span>】的 5000 端口来访问本机的 3389 端口。</p>\n</blockquote>\n<pre><code>ssh -g -N -p 22 -R [远程ip]:[远程端口]:localhost:[本地端口] -i [id_rsa路径] [用户名]@[远程ip]\n</code></pre>\n<blockquote>\n<p>完整写法</p>\n</blockquote>\n<pre><code>ssh -g -N -p 22 -R [远程ip]:[远程端口]:localhost:[本地端口] [Host]\n</code></pre>\n<blockquote>\n<p>在【~/.ssh/config】文件中配置了 Host</p>\n</blockquote>\n<h3 id=\"正向代理\"><a class=\"anchor\" href=\"#正向代理\">#</a> 正向代理</h3>\n<pre><code>ssh -C -f -N -g -p 22 -L [本地端口]:[localhost / 远程ip]:[本地端口 / 远程端口] [Host]\n</code></pre>\n<blockquote>\n<p>说明：通过访问本地端口来访问【ip】</p>\n</blockquote>\n<h3 id=\"参数说明\"><a class=\"anchor\" href=\"#参数说明\">#</a> 参数说明</h3>\n<ul>\n<li>g 允许远程主机连接到本地转发端口</li>\n<li>N 不要执行远程命令</li>\n<li>R 反向代理</li>\n<li>L 正向代理</li>\n<li>C 压缩请求数据</li>\n<li>f 请求 ssh 命令在执行之前转到后台</li>\n</ul>\n",
            "tags": [
                "编程珠玑",
                "编程珠玑"
            ]
        },
        {
            "id": "https://blog.icuxika.com/2019/12/23/%E5%9C%A8%E5%89%8D%E5%90%8E%E7%AB%AF%E4%B8%AD%E5%BA%94%E7%94%A8AES%E5%92%8CRSA/",
            "url": "https://blog.icuxika.com/2019/12/23/%E5%9C%A8%E5%89%8D%E5%90%8E%E7%AB%AF%E4%B8%AD%E5%BA%94%E7%94%A8AES%E5%92%8CRSA/",
            "title": "在前后端中应用AES和RSA",
            "date_published": "2019-12-22T16:32:56.000Z",
            "content_html": "<h2 id=\"java端\"><a class=\"anchor\" href=\"#java端\">#</a> Java 端</h2>\n<h3 id=\"添加如下依赖\"><a class=\"anchor\" href=\"#添加如下依赖\">#</a> 添加如下依赖</h3>\n<pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;commons-codec&lt;/groupId&gt;\n    &lt;artifactId&gt;commons-codec&lt;/artifactId&gt;\n    &lt;version&gt;1.13&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.bouncycastle&lt;/groupId&gt;\n    &lt;artifactId&gt;bcprov-jdk15on&lt;/artifactId&gt;\n    &lt;version&gt;1.64&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>\n<h3 id=\"aescoder\"><a class=\"anchor\" href=\"#aescoder\">#</a> AESCoder</h3>\n<pre><code>public class AESCoder &#123;\n\n    /**\n     * 密钥算法\n     */\n    public static final String KEY_ALGORITHM = &quot;AES&quot;;\n\n    /**\n     * 加密/解密算法 /工作模式 /填充方式\n     */\n    public static final String CIPHER_ALGORITHM = &quot;AES/ECB/PKCS5Padding&quot;;\n\n    /**\n     * 转换密钥\n     *\n     * @param key 二进制密钥\n     * @return Key 密钥\n     */\n    private static Key toKey(byte[] key) &#123;\n        SecretKey secretKey = new SecretKeySpec(key, KEY_ALGORITHM);\n        return secretKey;\n    &#125;\n\n    /**\n     * 解密\n     *\n     * @param data 密文\n     * @param key  密钥\n     * @return byte[] 原文\n     * @throws Exception\n     */\n    public static byte[] decrypt(byte[] data, byte[] key) throws Exception &#123;\n        Key k = toKey(key);\n        Cipher cipher = Cipher.getInstance(CIPHER_ALGORITHM);\n        cipher.init(Cipher.DECRYPT_MODE, k);\n        return cipher.doFinal(data);\n    &#125;\n\n    /**\n     * 加密\n     *\n     * @param data 原文\n     * @param key  密钥\n     * @return byte[] 密文\n     * @throws Exception\n     */\n    public static byte[] encrypt(byte[] data, byte[] key) throws Exception &#123;\n        Key k = toKey(key);\n        Cipher cipher = Cipher.getInstance(CIPHER_ALGORITHM);\n        cipher.init(Cipher.ENCRYPT_MODE, k);\n        return cipher.doFinal(data);\n    &#125;\n\n&#125;\n</code></pre>\n<h3 id=\"aesutil\"><a class=\"anchor\" href=\"#aesutil\">#</a> AESUtil</h3>\n<pre><code>public class AESUtil &#123;\n\n    /**\n     * AES 加密\n     *\n     * @param plainText 原文\n     * @param key       密钥\n     * @return String 密文\n     * @throws Exception\n     */\n    public static String AESEncrypt(String plainText, String key) throws Exception &#123;\n        return Base64.encodeBase64String(AESCoder.encrypt(plainText.getBytes(StandardCharsets.UTF_8), key.getBytes(StandardCharsets.UTF_8)));\n    &#125;\n\n    /**\n     * AES 解密\n     *\n     * @param cipherText 密文\n     * @param key        密钥\n     * @return String 原文\n     * @throws Exception\n     */\n    public static String AESDecrypt(String cipherText, String key) throws Exception &#123;\n        return new String(AESCoder.decrypt(Base64.decodeBase64(cipherText), key.getBytes(StandardCharsets.UTF_8)), StandardCharsets.UTF_8);\n    &#125;\n&#125;\n</code></pre>\n<h3 id=\"rsacoder\"><a class=\"anchor\" href=\"#rsacoder\">#</a> RSACoder</h3>\n<pre><code>public class RSACoder &#123;\n\n    /**\n     * 密钥算法\n     */\n    public static final String KEY_ALGORITHM = &quot;RSA&quot;;\n\n    /**\n     * 私钥解密\n     *\n     * @param data 密文\n     * @param key  私钥\n     * @return byte[] 原文\n     * @throws Exception\n     */\n    public static byte[] decryptByPrivateKey(byte[] data, byte[] key) throws Exception &#123;\n        PKCS8EncodedKeySpec pkcs8EncodedKeySpec = new PKCS8EncodedKeySpec(makePrivateKey(key));\n        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);\n        PrivateKey privateKey = keyFactory.generatePrivate(pkcs8EncodedKeySpec);\n        Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());\n        cipher.init(Cipher.DECRYPT_MODE, privateKey);\n        return cipher.doFinal(data);\n    &#125;\n\n    /**\n     * 公钥加密\n     *\n     * @param data 原文\n     * @param key  公钥\n     * @return byte[] 密文\n     * @throws Exception\n     */\n    public static byte[] encryptByPublicKey(byte[] data, byte[] key) throws Exception &#123;\n        X509EncodedKeySpec x509EncodedKeySpec = new X509EncodedKeySpec(key);\n        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);\n        PublicKey publicKey = keyFactory.generatePublic(x509EncodedKeySpec);\n        Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());\n        cipher.init(Cipher.ENCRYPT_MODE, publicKey);\n        return cipher.doFinal(data);\n    &#125;\n\n    /**\n     * 公钥解密\n     *\n     * @param data 密文\n     * @param key  公钥\n     * @return byte[] 原文\n     * @throws Exception\n     */\n    public static byte[] decryptByPublicKey(byte[] data, byte[] key) throws Exception &#123;\n        X509EncodedKeySpec x509EncodedKeySpec = new X509EncodedKeySpec(key);\n        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);\n        PublicKey publicKey = keyFactory.generatePublic(x509EncodedKeySpec);\n        Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());\n        cipher.init(Cipher.DECRYPT_MODE, publicKey);\n        return cipher.doFinal(data);\n    &#125;\n\n    /**\n     * 私钥加密\n     *\n     * @param data 原文\n     * @param key  私钥\n     * @return byte[] 密文\n     * @throws Exception\n     */\n    public static byte[] encryptByPrivateKey(byte[] data, byte[] key) throws Exception &#123;\n        PKCS8EncodedKeySpec pkcs8EncodedKeySpec = new PKCS8EncodedKeySpec(makePrivateKey(key));\n        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);\n        PrivateKey privateKey = keyFactory.generatePrivate(pkcs8EncodedKeySpec);\n        Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());\n        cipher.init(Cipher.ENCRYPT_MODE, privateKey);\n        return cipher.doFinal(data);\n    &#125;\n\n    /**\n     * 对私钥进行PKCS8格式化\n     *\n     * @param data 原始钥匙\n     * @return byte[] 格式化后的私钥\n     * @throws Exception\n     */\n    public static byte[] makePrivateKey(byte[] data) throws Exception &#123;\n        ASN1EncodableVector asn1EncodableVector1 = new ASN1EncodableVector();\n        asn1EncodableVector1.add(new ASN1Integer(0));\n        ASN1EncodableVector asn1EncodableVector2 = new ASN1EncodableVector();\n        asn1EncodableVector2.add(new ASN1ObjectIdentifier(PKCSObjectIdentifiers.rsaEncryption.getId()));\n        asn1EncodableVector2.add(DERNull.INSTANCE);\n        asn1EncodableVector1.add(new DERSequence(asn1EncodableVector2));\n        asn1EncodableVector1.add(new DEROctetString(data));\n        ASN1Sequence sequence = new DERSequence(asn1EncodableVector1);\n        return sequence.getEncoded(&quot;DER&quot;);\n    &#125;\n&#125;\n</code></pre>\n<h3 id=\"rsautil\"><a class=\"anchor\" href=\"#rsautil\">#</a> RSAUtil</h3>\n<pre><code>public class RSAUtil &#123;\n\n    /**\n     * RSA 公钥加密\n     *\n     * @param plainText 原文\n     * @param key       公钥\n     * @return String 密文\n     * @throws Exception\n     */\n    public static String RSAEncryptByPublicKey(String plainText, String key) throws Exception &#123;\n        return Base64.encodeBase64String(RSACoder.encryptByPublicKey(plainText.getBytes(StandardCharsets.UTF_8), Base64.decodeBase64(key)));\n    &#125;\n\n    /**\n     * RSA 私钥解密\n     *\n     * @param cipherText 密文\n     * @param key        私钥\n     * @return String 原文\n     * @throws Exception\n     */\n    public static String RSADecryptByPrivateKey(String cipherText, String key) throws Exception &#123;\n        return new String(RSACoder.decryptByPrivateKey(Base64.decodeBase64(cipherText), Base64.decodeBase64(key)), StandardCharsets.UTF_8);\n    &#125;\n\n    /**\n     * RSA 私钥加密\n     *\n     * @param plainText 原文\n     * @param key       私钥\n     * @return String 密文\n     * @throws Exception\n     */\n    public static String RSAEncryptByPrivateKey(String plainText, String key) throws Exception &#123;\n        return Base64.encodeBase64String(RSACoder.encryptByPrivateKey(plainText.getBytes(StandardCharsets.UTF_8), Base64.decodeBase64(key)));\n    &#125;\n\n    /**\n     * RSA 公钥解密\n     *\n     * @param cipherText 密文\n     * @param key        公钥\n     * @return String 原文\n     * @throws Exception\n     */\n    public static String RSADecryptByPublicKey(String cipherText, String key) throws Exception &#123;\n        return new String(RSACoder.decryptByPublicKey(Base64.decodeBase64(cipherText), Base64.decodeBase64(key)), StandardCharsets.UTF_8);\n    &#125;\n&#125;\n</code></pre>\n<h2 id=\"javascript端\"><a class=\"anchor\" href=\"#javascript端\">#</a> JavaScript 端</h2>\n<h3 id=\"添加如下依赖-2\"><a class=\"anchor\" href=\"#添加如下依赖-2\">#</a> 添加如下依赖</h3>\n<pre><code>npm install crypto-js\nnpm install node-rsa\n</code></pre>\n<h3 id=\"secretjs\"><a class=\"anchor\" href=\"#secretjs\">#</a> secret.js</h3>\n<pre><code>import CryptoJS from &quot;crypto-js&quot;;\nimport NodeRSA from &quot;node-rsa&quot;;\n\n/**\n * @return &#123;string&#125;\n */\nfunction AESEncrypt(plainText, key) &#123;\n    let encodePlainText = CryptoJS.enc.Utf8.parse(plainText);\n    let encodeKey = CryptoJS.enc.Utf8.parse(key);\n    let encryptedData = CryptoJS.AES.encrypt(encodePlainText, encodeKey, &#123;\n        mode: CryptoJS.mode.ECB,\n        padding: CryptoJS.pad.Pkcs7\n    &#125;);\n    return encryptedData.ciphertext.toString(CryptoJS.enc.Base64);\n&#125;\n\n/**\n * @return &#123;string&#125;\n */\nfunction AESDecrypt(cipherText, key) &#123;\n    let encodeKey = CryptoJS.enc.Utf8.parse(key);\n    let decryptedData = CryptoJS.AES.decrypt(cipherText, encodeKey, &#123;\n        mode: CryptoJS.mode.ECB,\n        padding: CryptoJS.pad.Pkcs7\n    &#125;);\n    return decryptedData.toString(CryptoJS.enc.Utf8);\n\n&#125;\n\nconst privateKey = new NodeRSA(&quot;-----BEGIN RSA PRIVATE KEY-----\\n&quot; +\n    &quot;MIICWwIBAAKBgQCv/YEH5BiuSkblVJ71ZXaiuKaBz5QW5JB05flVEZPX4Kaiw8Cs\\n&quot; +\n    &quot;K/TRHCflO8aPvRUwVaExe0ZtsXMQ72ohuhk8eJQayq6DGHc12C8fddBFWo8YFP1j\\n&quot; +\n    &quot;XPL68pux6g14hB6vjmSntcsC4SBOcCf+esZKlj/t6LUkp/5othjsag9G9wIDAQAB\\n&quot; +\n    &quot;AoGAeaC8xSRZ/lJtLt9NwJEv7YOp57r7QNsUDwZFTAqK375ty7138kWqu742wFGQ\\n&quot; +\n    &quot;iBSIiVAUyCrHYNYrjP+5nLeN6jwxY5Z4WprSjTlKisDDxJrcSIKJ49qNNNx6lyiQ\\n&quot; +\n    &quot;bOZbMf/WQWxBZE7BTKQ3JykdhRVta/NE+E+4fez2crGr4AECQQDfYShcmOPagGH/\\n&quot; +\n    &quot;kKpeOpk5HV5siKQeI6UcXzdFNq+i7nezAZRJK2pTIvizu4e+AlI+/QNDFYpFW0vr\\n&quot; +\n    &quot;Rw2Cx5ABAkEAybC9uC2Ry3O1y38Du2ynMVx0TtQhJIWOZ5xs4VR6lR88wGKzjPuQ\\n&quot; +\n    &quot;Qa1lK0GysAKzk+8GszSzrKtYCmAbgSNW9wJAcxU3Gh2apiOmWWhKnalK72X2E6yC\\n&quot; +\n    &quot;ARUUJ33Wl84IxsRc3thdcSTw7kwCHXbsBDRl8xWe7JzYU8spXdmJWGtAAQJABVSK\\n&quot; +\n    &quot;bwelRr80GsCslJN2h7Ntz3eDuLde4BYeOoZFBxPgQyVYoW00jsfKWK5Pzp8Dp/E1\\n&quot; +\n    &quot;OB84cGPG299WWr9YWQJALjf2Hjb70DN/en9oQl/FRVK4pSIVy+E9CwWoH7BZWtiS\\n&quot; +\n    &quot;6v4tK8q/a08avnaAvkNQIqK3S1DN/OJiyhXdcdNuiw==\\n&quot; +\n    &quot;-----END RSA PRIVATE KEY-----&quot;);\n\nconst publicKey = new NodeRSA(&quot;-----BEGIN PUBLIC KEY-----\\n&quot; +\n    &quot;MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCv/YEH5BiuSkblVJ71ZXaiuKaB\\n&quot; +\n    &quot;z5QW5JB05flVEZPX4Kaiw8CsK/TRHCflO8aPvRUwVaExe0ZtsXMQ72ohuhk8eJQa\\n&quot; +\n    &quot;yq6DGHc12C8fddBFWo8YFP1jXPL68pux6g14hB6vjmSntcsC4SBOcCf+esZKlj/t\\n&quot; +\n    &quot;6LUkp/5othjsag9G9wIDAQAB\\n&quot; +\n    &quot;-----END PUBLIC KEY-----&quot;);\n\nprivateKey.setOptions(&#123;encryptionScheme: &quot;pkcs1&quot;&#125;);\npublicKey.setOptions(&#123;encryptionScheme: &quot;pkcs1&quot;&#125;);\n\nfunction RSAEncryptByPublicKey(plainText) &#123;\n    return publicKey.encrypt(plainText, &quot;base64&quot;, &quot;utf8&quot;);\n&#125;\n\nfunction RSADecryptByPrivateKey(cipherText) &#123;\n    return privateKey.decrypt(cipherText, &quot;utf8&quot;);\n&#125;\n\nfunction RSAEncryptByPrivateKey(plainText) &#123;\n    return privateKey.encryptPrivate(plainText, &quot;base64&quot;, &quot;utf8&quot;);\n&#125;\n\nfunction RSADecryptByPublicKey(cipherText) &#123;\n    return publicKey.decryptPublic(cipherText, &quot;utf8&quot;);\n&#125;\n\nexport default &#123;\n    AESEncrypt,\n    AESDecrypt,\n    RSAEncryptByPublicKey,\n    RSADecryptByPrivateKey,\n    RSAEncryptByPrivateKey,\n    RSADecryptByPublicKey\n&#125;\n</code></pre>\n<h2 id=\"注意事项\"><a class=\"anchor\" href=\"#注意事项\">#</a> 注意事项</h2>\n<blockquote>\n<blockquote>\n<p>JavaScript 端密钥包括类似 “-----BEGIN PUBLIC KEY-----” 部分。</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>Java 端密钥不包括类似 “-----BEGIN PUBLIC KEY-----” 部分。</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>通过字符串指定密钥长度为所需密钥长度除以 8。（bit-&gt;byte）</p>\n</blockquote>\n</blockquote>\n<h2 id=\"rsa密钥生成方式\"><a class=\"anchor\" href=\"#rsa密钥生成方式\">#</a> RSA 密钥生成方式</h2>\n<pre><code>// 进入openssl\nopenssl\n// 生成私钥\ngenrsa -out rsa_private_key.pem 1024\n// 生成私钥对应的公钥\nrsa -in rsa_private_key.pem -pubout -out rsa_public_key.pem\n</code></pre>\n",
            "tags": [
                "编程珠玑",
                "编程珠玑"
            ]
        },
        {
            "id": "https://blog.icuxika.com/2019/09/26/Ubuntu%E4%B8%8BBochs-2-6-9%E7%9A%84%E5%AE%89%E8%A3%85/",
            "url": "https://blog.icuxika.com/2019/09/26/Ubuntu%E4%B8%8BBochs-2-6-9%E7%9A%84%E5%AE%89%E8%A3%85/",
            "title": "Ubuntu下Bochs-2.6.9的安装",
            "date_published": "2019-09-26T03:10:38.000Z",
            "content_html": "<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> build-essential</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> libx11-dev</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> libxrandr-dev</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> libgtk2.0-dev</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>./configure --enable-debugger --enable-disasm --enable-iodebug --enable-x86-debugger --with-x --with-x11 <span class=\"token assign-left variable\">LIBS</span><span class=\"token operator\">=</span><span class=\"token string\">'-lX11'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">make</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">cp</span> bochs bochsdbg</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span></pre></td></tr></table></figure>",
            "tags": [
                "一个操作系统的实现",
                "操作系统"
            ]
        },
        {
            "id": "https://blog.icuxika.com/2019/01/14/%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0MBR/",
            "url": "https://blog.icuxika.com/2019/01/14/%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0MBR/",
            "title": "简单实现MBR",
            "date_published": "2019-01-14T05:37:43.000Z",
            "content_html": "<h2 id=\"关于\"><a class=\"anchor\" href=\"#关于\">#</a> 关于</h2>\n<p>上一篇文章介绍了在在<strong> Windows 10</strong> 下实现一个操作系统需要部署的环境。本文就正式开始实现一个操作系统了。</p>\n<h2 id=\"这篇文章讲了什么\"><a class=\"anchor\" href=\"#这篇文章讲了什么\">#</a> 这篇文章讲了什么？</h2>\n<ul>\n<li>计算机启动过程的大致介绍</li>\n<li>实现 MBR</li>\n<li>Windows 10 下 Bochs-2.6.9 的配置与运行</li>\n</ul>\n<h3 id=\"计算机的启动过程\"><a class=\"anchor\" href=\"#计算机的启动过程\">#</a> 计算机的启动过程</h3>\n<p>当我们按下计算机的<strong> Power button</strong> 后，首先运行的软件是<strong> BIOS</strong>，全称为<strong> Basic Input &amp; Output System</strong>，即基本输入输出系统。由于<strong> BIOS</strong> 是第一个运行的软件，所以它只能由硬件来加载。</p>\n<p><strong>BIOS</strong> 启动后，便开始检测内存、显卡等外设信息，当检测通过，并初始化好硬件后，它的最后一项工作是校验启动盘中位于<strong> 0</strong> 盘<strong> 0</strong> 道<strong> 1</strong> 扇区的内容。当检测到此扇区末尾的两个字节分别为<strong> 0x55</strong> 和<strong> 0xaa</strong>，<strong>BIOS</strong> 便认为此扇区中确实存在可执行的程序（此程序就是<strong> MBR</strong>），然后加载到物理地址<strong> 0x7c00</strong>，随后跳转到此地址上，继续执行。</p>\n<blockquote>\n<p>MBR，主引导记录，全称是 Main Boot Record。</p>\n</blockquote>\n<h2 id=\"实现mbr\"><a class=\"anchor\" href=\"#实现mbr\">#</a> 实现 MBR</h2>\n<h3 id=\"代码如下eosbootmbrs\"><a class=\"anchor\" href=\"#代码如下eosbootmbrs\">#</a> 代码如下（<strong>E:\\OS\\boot\\mbr.S</strong>）</h3>\n<pre><code>; 主引导程序\n; -----------------------------------------------\nSECTION MBR vstart=0x7c00\n    mov ax, cs\n    mov ds, ax\n    mov es, ax\n    mov ss, ax\n    mov fs, ax\n    mov sp, 0x7c00\n\n; 清屏利用 0x06 号功能，上卷全部行，则可清屏。\n; -----------------------------------------------\n; INT 0x10 功能号 0x06 功能描述：上卷窗口\n; -----------------------------------------------\n; 输入：\n; AH 功能号 = 0x06\n; AL = 上卷的行数（如果为0，表示全部）\n; BH = 上卷行属性\n; (CL, CH) = 窗口左上角的（X，Y）位置\n; (DL, DH) = 窗口右下角的（X，Y）位置\n; 无返回值：\n    mov ax, 0x600\n    mov bx, 0x700\n    mov cx, 0                     ; 左上角：（0，0）\n    mov dx, 0x184f                ; 右下角：（80，25）\n                                  ; VGA文本模式中，一行只能容纳80个字符，共25行\n                                  ; 下标从0开始，所以0x18=24，0x4f=79\n    int 0x10                      ; int 0x10\n\n;   获取光标位置\n;   .get_cursor 获取当前光标位置，在光标位置处打印字符\n    mov ah, 3                     ; 输入：3号子功能是获取光标位置，需要存入ah寄存器\n    mov bh, 0                     ; bh寄存器存储的是带获取光标的页号\n\n    int 0x10                      ; 输出： ch=光标开始行，cl=光标结束行\n                                  ; dh=光标所在行号，dl=光标所在列号\n\n;   获取光标位置结束\n\n;   打印字符串\n;   还是用10h中断，不过这次调用13号子功能打印字符串\n    mov ax, message\n    mov bp, ax                    ; es:bp 为串首地址，es此时同cs一致\n                                  ; 开头时已经为sreg初始化\n\n;   光标位置要用到dx寄存器中内容，cx中的光标位置可忽略\n    mov cx, 5                     ; cx为串长度，不包括结束符0的字符个数\n    mov ax, 0x1301                ; 子功能号13显示字符及属性，要存入ah寄存器\n                                  ; al设置写字符方式ah=01：显示字符串，光标跟随移动\n    mov bx, 0x2                   ; bh中存储要显示的页号，此处是第0页\n                                  ; bl中是字符属性，属性黑底绿字（bl=02h）\n    int 0x10                      ; 执行BIOS 0x10号中断\n;   打印字符串结束\n\n    jmp $                         ; 是程序悬停在此\n\n    message db &quot;1 MBR&quot;\n    times 510-($-$$) db 0\n    db 0x55, 0xaa\n</code></pre>\n<h3 id=\"使用nasm编译mbrs\"><a class=\"anchor\" href=\"#使用nasm编译mbrs\">#</a> 使用 nasm 编译 mbr.S</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nasm -o mbr.bin mbr.S</pre></td></tr></table></figure><h3 id=\"验证mbrbin的文件大小是否512字节\"><a class=\"anchor\" href=\"#验证mbrbin的文件大小是否512字节\">#</a> 验证 mbr.bin 的文件大小是否 512 字节</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> -lb mbr.bin</pre></td></tr></table></figure><blockquote>\n<p>以上命令都在<strong> Cmder</strong> 中运行。</p>\n<p>接下来，便是要用 Bochs 测试一下</p>\n</blockquote>\n<h2 id=\"bochs-269的配置与运行\"><a class=\"anchor\" href=\"#bochs-269的配置与运行\">#</a> Bochs-2.6.9 的配置与运行</h2>\n<ul>\n<li>\n<p>想要在<strong> Bochs</strong> 中成功模拟 MBR 的执行，需要对<strong> Bochs</strong> 进行如下三步配置</p>\n<ul>\n<li>将<strong> Bochs</strong> 根目录下<strong> bochsrc-sample.txt</strong> 在同位置复制黏贴一份，改名为<strong> bochsrc-sample-test.bxrc</strong>，在<strong> Visual Studio Code</strong> 中对其进行编辑，内容如下。</li>\n<li>借助<strong> Bochs</strong> 根目录下<strong> bximage.exe</strong> 初始化一个<strong> 1.44M</strong> 的软盘</li>\n<li>借助<strong> Bochs</strong> 根目录下<strong> bximage.exe</strong> 初始化一个<strong> 60M</strong> 的硬盘</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"bochs初始化配置\"><a class=\"anchor\" href=\"#bochs初始化配置\">#</a> Bochs 初始化配置</h3>\n<p><strong>bochsrc-sample-test.bxrc</strong>（<strong>D:\\Program Files\\Bochs-2.6.9\\bochsrc-sample-test.bxrc</strong>）内容如下</p>\n<pre><code># &quot;#&quot;是注释(comment)\n\n# 分配内存megs参数[megs: 128 分配128MB内存,最大是2048]不被赞成使用\n# 使用memory替代\n# guest 分配给模拟器客户端的内存大小\n# host  从guest分配给主机的内存大小,实际分配可能比guest小,如果用到了\n# 更多的内存将会动态加入,但访问不能大于guest内存大小.\n# memory 没有内存大小限制,限制的是CPU可访问内存最大大小(即CPU地址总线宽度)\nmemory: guest=32,host=32\n\n# 配置ROM BIOS,ROM BIOS将控制计算机首次启动的功能(BIOS的固件)\n# file:ROM BIOS二进制文件路径,这个参数下面不再解说\nromimage: file=BIOS-bochs-latest\n\n# VGA ROM 的映象文件  一般是被映射到内存地址0xC0000处,相当于我们的显卡\nvgaromimage: file=VGABIOS-elpin-2.40\n\n#使用软驱 floppy_ ,&quot;_&quot;可以是a,b,c,d...\n#例子:软驱a,b 大小为1.44MB  \n# 参数:status 有两种分别为\n# inserted（软盘插入软驱），ejected（软盘未插入软驱）。\nfloppya: image=&quot;fd144.img&quot;, status=inserted\n\n\n# ata是一个接口 可以是ata0,ata1,ata2,ata3,用来控制硬盘(disk)和光驱(cdrom)\n#ioaddr1 分配主盘的io端口地址 ..... \n#ioaddr2 分配从盘的io端口地址 .....\n#irg     中断请求号(当发生中断时,对应的中断向量)\n#学过硬盘端口读写的朋友应该知道主盘对应端口(0x1f0~0x1f7)\n#从盘对应对口(0x3f0~0x3f7)\nata0: enabled=1,ioaddr1=0x1f0, ioaddr2=0x3f0,irq=14\n\n#ata[0-3]-master 定义设备类型和特征 \n#type       连接设备的类型[disk(硬盘)|cdrom(光驱)]\n#path       虚拟镜像路径(我用的是virtualbox虚拟机的虚拟硬盘)\n#cylinders  柱面数(type为硬盘是才有这个参数)\n#heads      每柱面拥有的磁道数(type为硬盘是才有这个参数)\n#spt        没磁道的扇区数量(type为硬盘是才有这个参数)\nata0-master: type=disk, path=&quot;hd60M.img&quot;, mode=flat\n\n#设置启动顺序 1.硬盘,2.软驱(配置过BIOS启动项的朋友肯定知道)\nboot: disk,floppy\n\n\n#日志输出 log: 日志路径\nlog: bochslog.txt\n\n#设置鼠标不可用 ,如果enabled不为0那么bochs会发送鼠标事件到仿真机上\n#因为是字符界面,无需鼠标\nmouse: enabled=0\n\n#设置键盘\n#type 键盘类型\n#keymap 键盘映射文件\nkeyboard: type=mf,keymap=keymaps/x11-pc-us.map\n</code></pre>\n<p>其中软盘<strong> fd144.img</strong></p>\n<pre><code>floppya: image=&quot;fd144.img&quot;, status=inserted\n</code></pre>\n<p>和硬盘<strong> hd60M.img</strong></p>\n<pre><code>ata0-master: type=disk, path=&quot;hd60M.img&quot;, mode=flat\n</code></pre>\n<p>生成方式</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>D:<span class=\"token punctuation\">\\</span>Program Files<span class=\"token punctuation\">\\</span>Bochs-2.6.9</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>λ bximage.exe</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                                bximage</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  Disk Image Creation / Conversion / Resize and Commit Tool <span class=\"token keyword\">for</span> Bochs</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>         <span class=\"token variable\">$Id</span><span class=\"token builtin class-name\">:</span> bximage.cc <span class=\"token number\">13069</span> <span class=\"token number\">2017</span>-02-12 <span class=\"token number\">16</span>:51:52Z vruppert $</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">1</span>. Create new floppy or hard disk image</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">2</span>. Convert hard disk image to other <span class=\"token function\">format</span> <span class=\"token punctuation\">(</span>mode<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">3</span>. Resize hard disk image</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">4</span>. Commit <span class=\"token string\">'undoable'</span> redolog to base image</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">5</span>. Disk image info</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">0</span>. Quit</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>Please choose one <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>Create image</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>Do you want to create a floppy disk image or a hard disk image?</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>Please <span class=\"token builtin class-name\">type</span> hd or fd. <span class=\"token punctuation\">[</span>hd<span class=\"token punctuation\">]</span> fd</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>Choose the size of floppy disk image to create.</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>Please <span class=\"token builtin class-name\">type</span> 160k, 180k, 320k, 360k, 720k, <span class=\"token number\">1</span>.2M, <span class=\"token number\">1</span>.44M, <span class=\"token number\">1</span>.68M, <span class=\"token number\">1</span>.72M, or <span class=\"token number\">2</span>.88M.</pre></td></tr><tr><td data-num=\"26\"></td><td><pre> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span>.44M<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>What should be the name of the image?</pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">[</span>a.img<span class=\"token punctuation\">]</span> fd144.img</pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>Creating floppy image <span class=\"token string\">'fd144.img'</span> with <span class=\"token number\">2880</span> sectors</pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>The following line should appear <span class=\"token keyword\">in</span> your bochsrc:</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  floppya: <span class=\"token assign-left variable\">image</span><span class=\"token operator\">=</span><span class=\"token string\">\"fd144.img\"</span>, <span class=\"token assign-left variable\">status</span><span class=\"token operator\">=</span>inserted</pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">(</span>The line is stored <span class=\"token keyword\">in</span> your windows clipboard, use CTRL-V to <span class=\"token function\">paste</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>Press any key to <span class=\"token builtin class-name\">continue</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>D:<span class=\"token punctuation\">\\</span>Program Files<span class=\"token punctuation\">\\</span>Bochs-2.6.9</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>λ bximage.exe</pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                                bximage</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  Disk Image Creation / Conversion / Resize and Commit Tool <span class=\"token keyword\">for</span> Bochs</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>         <span class=\"token variable\">$Id</span><span class=\"token builtin class-name\">:</span> bximage.cc <span class=\"token number\">13069</span> <span class=\"token number\">2017</span>-02-12 <span class=\"token number\">16</span>:51:52Z vruppert $</pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token number\">1</span>. Create new floppy or hard disk image</pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token number\">2</span>. Convert hard disk image to other <span class=\"token function\">format</span> <span class=\"token punctuation\">(</span>mode<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token number\">3</span>. Resize hard disk image</pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token number\">4</span>. Commit <span class=\"token string\">'undoable'</span> redolog to base image</pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token number\">5</span>. Disk image info</pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token number\">0</span>. Quit</pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>Please choose one <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>Create image</pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>Do you want to create a floppy disk image or a hard disk image?</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>Please <span class=\"token builtin class-name\">type</span> hd or fd. <span class=\"token punctuation\">[</span>hd<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>What kind of image should I create?</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>Please <span class=\"token builtin class-name\">type</span> flat, sparse, growing, vpc or vmware4. <span class=\"token punctuation\">[</span>flat<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>Enter the hard disk size <span class=\"token keyword\">in</span> megabytes, between <span class=\"token number\">10</span> and <span class=\"token number\">8257535</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>What should be the name of the image?</pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token punctuation\">[</span>c.img<span class=\"token punctuation\">]</span> hd60M.img</pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>Creating hard disk image <span class=\"token string\">'hd60M.img'</span> with <span class=\"token assign-left variable\">CHS</span><span class=\"token operator\">=</span><span class=\"token number\">121</span>/16/63</pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>The following line should appear <span class=\"token keyword\">in</span> your bochsrc:</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  ata0-master: <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span>disk, <span class=\"token assign-left variable\">path</span><span class=\"token operator\">=</span><span class=\"token string\">\"hd60M.img\"</span>, <span class=\"token assign-left variable\">mode</span><span class=\"token operator\">=</span>flat</pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token punctuation\">(</span>The line is stored <span class=\"token keyword\">in</span> your windows clipboard, use CTRL-V to <span class=\"token function\">paste</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>Press any key to <span class=\"token builtin class-name\">continue</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>D:<span class=\"token punctuation\">\\</span>Program Files<span class=\"token punctuation\">\\</span>Bochs-2.6.9</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>λ</pre></td></tr></table></figure><h3 id=\"在bochs中模拟运行mbr\"><a class=\"anchor\" href=\"#在bochs中模拟运行mbr\">#</a> 在 Bochs 中模拟运行 MBR</h3>\n<ul>\n<li>在这里要做两件事\n<ul>\n<li>将<strong> mbr.bin</strong> 写入到硬盘<strong> hd60M.img</strong> 中</li>\n<li>指定配置文件运行 Bochs</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>E:<span class=\"token punctuation\">\\</span>OS<span class=\"token punctuation\">\\</span>boot</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>λ <span class=\"token function\">ls</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>mbr.S  mbr.bin</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>E:<span class=\"token punctuation\">\\</span>OS<span class=\"token punctuation\">\\</span>boot</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>λ <span class=\"token function\">dd</span> <span class=\"token assign-left variable\">if</span><span class=\"token operator\">=</span>mbr.bin <span class=\"token assign-left variable\">of</span><span class=\"token operator\">=</span><span class=\"token string\">\"D:\\Program Files\\Bochs-2.6.9\\hd60M.img\"</span> <span class=\"token assign-left variable\">bs</span><span class=\"token operator\">=</span><span class=\"token number\">512</span> <span class=\"token assign-left variable\">count</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token assign-left variable\">conv</span><span class=\"token operator\">=</span>notrunc</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">1</span>+0 records <span class=\"token keyword\">in</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">1</span>+0 records out</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">512</span> bytes copied, <span class=\"token number\">0.0100447</span> s, <span class=\"token number\">51.0</span> kB/s</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>E:<span class=\"token punctuation\">\\</span>OS<span class=\"token punctuation\">\\</span>boot</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>λ</pre></td></tr></table></figure><blockquote>\n<blockquote>\n<p>在 Linux 下，启动 Bochs 后，输入字符 c 后，再输入回车执行。</p>\n</blockquote>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>D:<span class=\"token punctuation\">\\</span>Program Files<span class=\"token punctuation\">\\</span>Bochs-2.6.9</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>λ bochs -f <span class=\"token string\">\"bochsrc-sample-test.bxrc\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                       Bochs x86 Emulator <span class=\"token number\">2.6</span>.9</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>               Built from SVN snapshot on April <span class=\"token number\">9</span>, <span class=\"token number\">2017</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                  Compiled on Apr  <span class=\"token number\">9</span> <span class=\"token number\">2017</span> at 09:32:13</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>00000000000i<span class=\"token punctuation\">[</span>      <span class=\"token punctuation\">]</span> reading configuration from bochsrc-sample-test.bxrc</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>00000000000e<span class=\"token punctuation\">[</span>      <span class=\"token punctuation\">]</span> bochsrc-sample-test.bxrc:39: ataX-master/slave CHS <span class=\"token builtin class-name\">set</span> to <span class=\"token number\">0</span>/0/0 - autodetection enabled</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>00000000000i<span class=\"token punctuation\">[</span>      <span class=\"token punctuation\">]</span> installing win32 module as the Bochs GUI</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>00000000000i<span class=\"token punctuation\">[</span>      <span class=\"token punctuation\">]</span> using log <span class=\"token function\">file</span> bochslog.txt</pre></td></tr></table></figure><p><img data-src=\"/2019/01/14/%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0MBR/1.png\" class=\"\" title=\"运行成功截图\"></p>\n",
            "tags": [
                "一个操作系统的实现",
                "操作系统"
            ]
        },
        {
            "id": "https://blog.icuxika.com/2019/01/14/%E5%9C%A8Windows-10%E4%B8%8B%E9%83%A8%E7%BD%B2%E7%8E%AF%E5%A2%83/",
            "url": "https://blog.icuxika.com/2019/01/14/%E5%9C%A8Windows-10%E4%B8%8B%E9%83%A8%E7%BD%B2%E7%8E%AF%E5%A2%83/",
            "title": "在Windows-10下部署环境",
            "date_published": "2019-01-14T05:36:10.000Z",
            "content_html": "<h2 id=\"关于\"><a class=\"anchor\" href=\"#关于\">#</a> 关于</h2>\n<p>本系列文章是建立在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ib29rLmRvdWJhbi5jb20vc3ViamVjdC8yNjc0NTE1Ni8=\">《操作系统真象还原》</span>一书的基础上的。</p>\n<h2 id=\"工具准备\"><a class=\"anchor\" href=\"#工具准备\">#</a> 工具准备</h2>\n<h3 id=\"汇编语言编译器nasm\"><a class=\"anchor\" href=\"#汇编语言编译器nasm\">#</a> 汇编语言编译器：NASM</h3>\n<blockquote>\n<p>下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmFzbS51cy8=\">NASM</span></p>\n</blockquote>\n<h3 id=\"windows下终端cmder\"><a class=\"anchor\" href=\"#windows下终端cmder\">#</a> Windows 下终端：Cmder</h3>\n<blockquote>\n<p>下载地址：<span class=\"exturl\" data-url=\"aHR0cDovL2NtZGVyLm5ldC8=\">Cmder</span></p>\n</blockquote>\n<h3 id=\"x86硬件平台模拟器bochs-269\"><a class=\"anchor\" href=\"#x86硬件平台模拟器bochs-269\">#</a> x86 硬件平台模拟器：Bochs-2.6.9</h3>\n<blockquote>\n<p>下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMvYm9jaHMvZmlsZXMv\">Bochs</span></p>\n</blockquote>\n<h3 id=\"一个编辑器visual-studio-code\"><a class=\"anchor\" href=\"#一个编辑器visual-studio-code\">#</a> 一个编辑器：Visual Studio Code</h3>\n<blockquote>\n<p>下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20v\">Visual Studio Code</span></p>\n</blockquote>\n<h2 id=\"环境配置\"><a class=\"anchor\" href=\"#环境配置\">#</a> 环境配置</h2>\n<h3 id=\"nasm\"><a class=\"anchor\" href=\"#nasm\">#</a> NASM</h3>\n<p>这方面暂时不说什么。</p>\n<h3 id=\"cmder\"><a class=\"anchor\" href=\"#cmder\">#</a> Cmder</h3>\n<p>官网提供了<strong> Mini</strong> 和<strong> Full</strong> 两个版本的下载链接，其中<strong> Full</strong> 版本内置了<strong> Git for Windows</strong> 工具。只要将<strong> Cmder</strong> 下<strong> Git for Windows</strong> 工具对应的目录添加到环境变量即可使用<strong> git</strong> 命令以及一些常见的<strong> Linux</strong> 命令 ，这其中就包含后面要用到的<strong> Linux</strong> 下用于磁盘操作的命令<strong> dd</strong>。除此之外，<strong>Cmder</strong> 下还藏着一个<strong> GCC</strong> 编译器，如果要使用的话，需要将对应的目录添加到环境变量。</p>\n<h3 id=\"bochs\"><a class=\"anchor\" href=\"#bochs\">#</a> Bochs</h3>\n<p>这个也后面再说吧。</p>\n<h3 id=\"visual-studio-code\"><a class=\"anchor\" href=\"#visual-studio-code\">#</a> Visual Studio Code</h3>\n<p>这个就不说了。</p>\n",
            "tags": [
                "一个操作系统的实现",
                "操作系统"
            ]
        }
    ]
}